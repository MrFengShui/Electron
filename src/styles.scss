/* You can add global styles to this file, and also import other style files */
@import "@angular/material/prebuilt-themes/indigo-pink.css";

html, body {
    margin: 0;
    padding: 0;
    width: 100vw;
    height: 100vh;
}

$align-tag: (
    align-content, align-items, align-self,
    justify-content, justify-items, justify-self,
    place-content, place-items, place-self
);
$align-dir: (start: flex-start, end: flex-end, center: center, between: space-between, around: space-around);
$align-map: (block, flex, grid, none);
@each $align in $align-tag {
    @each $key, $value in $align-dir {
        .#{$align}-#{$key} {
            #{$align}: $value !important;
        }
    }
}
@each $align in $align-map {
    .d-#{$align} {
        display: #{$align} !important;
    }
}

$border-map: (
    "0": 0,
    "1": 1px,
    "2": 2px,
    "3": 4px,
);
.border {
    border-style: solid;
    border-width: 0;
    box-sizing: border-box;

    @each $key, $value in $border-map {
        &.b-#{$key} {
            border-width: $value;
        }

        &.bt-#{$key} {
            border-top-width: $value !important;
        }

        &.bb-#{$key} {
            border-bottom-width: $value !important;
        }

        &.bl-#{$key} {
            border-left-width: $value !important;
        }

        &.br-#{$key} {
            border-right-width: $value !important;
        }
    }
}

$direction: ("row-pos": row, "row-neg": row-reverse, "col-pos": column, "col-neg": column-reverse);
@each $key, $value in $direction {
    .flex-#{$key} {
        flex-direction: $value !important;
    }
}

$space-tag: ("m": margin, "p": padding);
$space-map: (
    auto: auto, 0: 0, 25: 0.25rem, 50: 0.5rem, 75: 0.75rem, 100: 1rem,
    125: 1.25rem, 150: 1.5rem, 175: 1.75rem, 200: 2rem, 250: 2.5rem,
    300: 3rem, 350: 3.5rem, 400: 4rem, 450: 4.5rem, 500: 5rem
);
@each $tagKey, $tagValue in $space-tag {
    @each $key, $value in $space-map {
        .#{$tagKey}-#{$key} {
            #{$tagValue}: $value !important;
        }

        .#{$tagKey}x-#{$key} {
            #{$tagValue}-left: $value !important;
            #{$tagValue}-right: $value !important;
        }

        .#{$tagKey}y-#{$key} {
            #{$tagValue}-top: $value !important;
            #{$tagValue}-bottom: $value !important;
        }

        .#{$tagKey}t-#{$key} {
            #{$tagValue}-top: $value !important;
        }

        .#{$tagKey}b-#{$key} {
            #{$tagValue}-bottom: $value !important;
        }

        .#{$tagKey}l-#{$key} {
            #{$tagValue}-left: $value !important;
        }

        .#{$tagKey}r-#{$key} {
            #{$tagValue}-right: $value !important;
        }
    }
}
@each $key, $value in $space-map {
    .g-#{$key} {
        gap: $value !important;
    }

    .gx-#{$key} {
        column-gap: $value !important;
    }

    .gy-#{$key} {
        row-gap: $value !important;
    }

    .sx-#{$key} {
        > :nth-child(n) {
            margin-left: $value !important;
            margin-right: $value !important;
        }

        > :first-child {
            margin-left: 0 !important;
        }

        > :last-child {
            margin-right: 0 !important;
        }
    }

    .sy-#{$key} {
        > :nth-child(n) {
            margin-top: $value !important;
            margin-bottom: $value !important;
        }

        > :first-child {
            margin-top: 0 !important;
        }

        > :last-child {
            margin-bottom: 0 !important;
        }
    }
}

$size-map: (
    auto: auto, fit: fit-content, 0: 0%,
    10: 10%, 20: 20%, 25: 25%, 30: 30%, 40: 40%, 50: 50%,
    60: 60%, 70: 70%, 75: 75%, 80: 80%, 90: 90%, 100: 100%
);
@each $key, $value in $size-map {
    .w-#{$key} {
        width: #{$value};
    }

    .h-#{$key} {
        height: #{$value};
    }
}

.flex-fill {
    flex: auto;
}

.overflow {
    &.overflow-xy {
        overflow: auto;
    }

    &.overflow-x {
        overflow-x: auto;
    }

    &.overflow-y {
        overflow-y: auto;
    }

    &::-webkit-scrollbar {
        width: 0.5rem;
        height: 0.5rem;
    }
}

$text-map: left, right, center, justify;
@each $item in $text-map {
    .text-#{$item} {
        text-align: $item !important;
    }
}

.demo-menu {
    width: 17.5rem;

    .mat-radio-button {
        .mat-radio-label {
            .mat-radio-label-content {
                display: flex;
                justify-content: space-between;
                align-items: center;
                width: 100%;
            }
        }
    }
}

.demo-sheet {
    min-width: 50vw !important;
    max-width: 100vw !important;
}

.mat-slide-toggle {
    &.demo-slide-toggle {
        .mat-slide-toggle-label {
            justify-content: space-between;
        }
    }
}


.demo-splash-screen {
    .mat-dialog-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;

        .logo {
            background-image: url(assets/image/splash-screen.jpg) !important;
            background-origin: border-box !important;
            background-position: center !important;
            background-repeat: no-repeat !important;
            background-size: cover !important;
        }

        .shadow {
            filter: drop-shadow(0.25rem 0.5rem 1rem #000000);
        }
    }
}

.demo-root {
    .demo-root-wrapper {
        display: flex;
        flex-direction: column;
    }
}

.demo-error-view {
    .demo-error-view-wrapper {
        background-image: url(assets/image/error-page.jpg);
        background-origin: border-box;
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }
}

.demo-navigation-view {
    .demo-navigation-view-wrapper {
        a {
            text-decoration: none;
        }
    }
}

.demo-snake-view {
    .demo-snake-view-wrapper {
        border-radius: 0;
        box-sizing: border-box;
    }
}

.demo-sort-view {
    .demo-sort-view-wrapper {
        border-radius: 0;
        box-sizing: border-box;
    }

    .sort-grid {
        display: grid;
        grid-template-rows: auto;
        gap: 0.125rem;
        place-items: stretch;
    }
}

.demo-maze-view {
    .demo-maze-view-wrapper {
        border-radius: 0;
        box-sizing: border-box;
    }

    .maze-grid {
        display: grid;
        place-items: stretch;
    }
}

.maze-view-overlay {
    .mat-dialog-container {
        display: flex;
        flex-direction: column;
        padding: 0.5rem;
    }
}
